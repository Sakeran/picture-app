// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders all fields correctly 1`] = `
<LoginForm
  sendFunc={[Function]}
>
  <Formsy
    onChange={[Function]}
    onError={[Function]}
    onInvalid={[Function]}
    onInvalidSubmit={[Function]}
    onSubmit={[Function]}
    onSuccess={[Function]}
    onValid={[Function]}
    onValidSubmit={[Function]}
    preventExternalInvalidation={false}
    validationErrors={null}
  >
    <form
      onSubmit={[Function]}
    >
      <Formsy(TextInput)
        name="username"
        required={true}
        title="Username"
        validationError=""
        validationErrors={
          Object {
            "hasSpaces": "Username cannot contain spaces",
            "minLength": "Username cannot be blank. ",
          }
        }
        validations={
          Object {
            "hasSpaces": [Function],
            "minLength": 1,
          }
        }
        value=""
      >
        <TextInput
          getErrorMessage={[Function]}
          getErrorMessages={[Function]}
          getValue={[Function]}
          hasValue={[Function]}
          isFormDisabled={[Function]}
          isFormSubmitted={[Function]}
          isPristine={[Function]}
          isRequired={[Function]}
          isValid={[Function]}
          isValidValue={[Function]}
          name="username"
          required={true}
          resetValue={[Function]}
          setValidations={[Function]}
          setValue={[Function]}
          showError={[Function]}
          showRequired={[Function]}
          title="Username"
          validationError=""
          validationErrors={
            Object {
              "hasSpaces": "Username cannot contain spaces",
              "minLength": "Username cannot be blank. ",
            }
          }
          validations={
            Object {
              "hasSpaces": [Function],
              "minLength": 1,
            }
          }
          value=""
        >
          <div
            className="field"
          >
            <label
              htmlFor="username"
            >
              Username
            </label>
            <input
              name="username"
              onChange={[Function]}
              type="text"
              value=""
            />
            <span
              className="field-error"
            />
          </div>
        </TextInput>
      </Formsy(TextInput)>
      <Formsy(TextInput)
        name="password"
        required={true}
        title="Password"
        type="password"
        validationError="Invalid Password"
        validationErrors={Object {}}
        validations="minLength:1"
        value=""
      >
        <TextInput
          getErrorMessage={[Function]}
          getErrorMessages={[Function]}
          getValue={[Function]}
          hasValue={[Function]}
          isFormDisabled={[Function]}
          isFormSubmitted={[Function]}
          isPristine={[Function]}
          isRequired={[Function]}
          isValid={[Function]}
          isValidValue={[Function]}
          name="password"
          required={true}
          resetValue={[Function]}
          setValidations={[Function]}
          setValue={[Function]}
          showError={[Function]}
          showRequired={[Function]}
          title="Password"
          type="password"
          validationError="Invalid Password"
          validationErrors={Object {}}
          validations="minLength:1"
          value=""
        >
          <div
            className="field"
          >
            <label
              htmlFor="password"
            >
              Password
            </label>
            <input
              name="password"
              onChange={[Function]}
              type="password"
              value=""
            />
            <span
              className="field-error"
            />
          </div>
        </TextInput>
      </Formsy(TextInput)>
      <input
        className="button"
        disabled={true}
        type="submit"
        value="Log In"
      />
    </form>
  </Formsy>
</LoginForm>
`;
